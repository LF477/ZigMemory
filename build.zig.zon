.{
    .name = "ZigMemory",
    // This is a [Semantic Version](https://semver.org/).
    .version = "0.0.0",

    // This field is optional.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        //.example = .{
        //    .url = "https://example.com/foo.tar.gz",
        //    .hash = "...",
        //    .path = "foo",
        //    .lazy = false,
        //},
    },

    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package.
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.

        "",
        // "build.zig",
        // "build.zig.zon",
        // "src",
        //"LICENSE",
        // "README.md",
    },
}
